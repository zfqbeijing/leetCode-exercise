Employee 表包含所有员工。Employee 表有三列：员工Id，公司名和薪水。

+-----+------------+--------+
|Id   | Company    | Salary |
+-----+------------+--------+
|1    | A          | 2341   |
|2    | A          | 341    |
|3    | A          | 15     |
|4    | A          | 15314  |
|5    | A          | 451    |
|6    | A          | 513    |
|7    | B          | 15     |
|8    | B          | 13     |
|9    | B          | 1154   |
|10   | B          | 1345   |
|11   | B          | 1221   |
|12   | B          | 234    |
|13   | C          | 2345   |
|14   | C          | 2645   |
|15   | C          | 2645   |
|16   | C          | 2652   |
|17   | C          | 65     |
+-----+------------+--------+
请编写SQL查询来查找每个公司的薪水中位数。挑战点：你是否可以在不使用任何内置的SQL函数的情况下解决此问题。

+-----+------------+--------+
|Id   | Company    | Salary |
+-----+------------+--------+
|5    | A          | 451    |
|6    | A          | 513    |
|12   | B          | 234    |
|9    | B          | 1154   |
|14   | C          | 2645   |
+-----+------------+--------+

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/median-employee-salary
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


执行用时：234 ms, 在所有 MySQL 提交中击败了88.75%的用户
内存消耗：0 B, 在所有 MySQL 提交中击败了100.00%的用户

SELECT
	e.id,
	e.company,
	e.salary
FROM
	(SELECT
		id,
		company,
		salary,
		-- ROW_NUMBER()OVER(PARTITION BY ... ORDER BY ...) 分组聚合函数
		ROW_NUMBER()OVER(
			PARTITION BY
				company
			ORDER BY
				salary
		) ranking,
        -- 求和分组
		COUNT(id) OVER(
			PARTITION BY
				company
		) cu
	FROM
		Employee) e
WHERE
	e.ranking>=e.cu/2
AND
	e.ranking<=e.cu/2+1

聚合函数 OVER(PARTITION BY ) 聚合函数分组

